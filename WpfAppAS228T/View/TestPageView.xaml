<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfAppAS228T.View"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
             xmlns:model="clr-namespace:WpfAppAS228T.Model" 
             xmlns:common="clr-namespace:WpfAppAS228T.Common"
             d:DataContext="{d:DesignInstance Type=common:NotifyBase}" x:Class="WpfAppAS228T.View.TestPageView"
             mc:Ignorable="d" Name="window"
             d:DesignHeight="800" d:DesignWidth="1250">
    <UserControl.Resources>
        <ResourceDictionary Source="../Assets/Styles/DefaultStyle.xaml"/>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Hidden">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="160"/>
                <RowDefinition Height="360"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <UniformGrid Grid.Row="0" Columns="4">
                <Border CornerRadius="5" Background="White" Margin="10">
                    <Border.Effect>
                        <DropShadowEffect Color="#F2F2F2" ShadowDepth="10" BlurRadius="105" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition />
                            <RowDefinition Height="10"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="1" Margin="30,0" >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Row="0" Text="{Binding TestPageModel.IP,UpdateSourceTrigger=PropertyChanged}"  FontSize="16" Height="35"
                                     Style="{DynamicResource IconIPTextBoxStyle}"/>
                            <TextBox Grid.Row="1" Text="{Binding TestPageModel.Port,UpdateSourceTrigger=PropertyChanged}" FontSize="16" Height="35" 
                                     Style="{DynamicResource IconPortTextBoxStyle}">
                                <TextBox.Resources>
                                    <Style x:Key="IconPortTextBoxStyle" TargetType="{x:Type TextBox}">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                        <Setter Property="BorderThickness" Value="1"/>
                                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                        <Setter Property="AllowDrop" Value="true"/>
                                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type TextBox}">
                                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}" 
                                                        Background="{TemplateBinding Background}" 
                                                        SnapsToDevicePixels="True"
                                                        CornerRadius="5">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="40"/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid Grid.Column="0">
                                                                <TextBlock Text="&#xEB64;" FontFamily="../Assets/Fonts/#iconfont" FontSize="25" 
                                                                    Foreground="#DDD"
                                                                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                            </Grid>

                                                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost"
                                                                Focusable="false" 
                                                                HorizontalScrollBarVisibility="Hidden" 
                                                                VerticalScrollBarVisibility="Hidden"
                                                                VerticalAlignment="Center" MinHeight="20"/>
                                                        </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                                                    <Condition Property="IsSelectionActive" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                            </MultiTrigger>
                                        </Style.Triggers>
                                    </Style>

                                </TextBox.Resources>
                            </TextBox>

                            <Grid Grid.Row="2" Height="35">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="7*"/>
                                    <RowDefinition Height="26*"/>
                                    <RowDefinition Height="2*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0" Content="Open" 
                                        Foreground="White" Margin="0,0,5,0" Style="{DynamicResource OpenButtonStyle}" Grid.RowSpan="3"
                                        Command="{Binding OpenDeviceCommand}"
                                        CommandParameter="{Binding ElementName=window}">
                                    <Button.Resources>
                                        <Style x:Key="FocusVisual">
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                                        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                                        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                                        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                                        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                                        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                                        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                                        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                                        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                                        <Style x:Key="OpenButtonStyle" TargetType="{x:Type Button}">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="1"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">

                                                        <Border Background="#007DFA" CornerRadius="5">
                                                            <Grid>
                                                                <Border CornerRadius="4" Background="#22FFFFFF" x:Name="back" Visibility="Hidden"/>
                                                                <ContentControl Content="{TemplateBinding Content}"
                                                                                VerticalAlignment="Center" 
                                                                                HorizontalAlignment="Center"/>
                                                            </Grid>
                                                        </Border>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Visibility" Value="Visible" TargetName="back"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Visibility" Value="Visible" TargetName="back"/>
                                                                <Setter Property="Background" Value="#EEE" TargetName="back"/>
                                                                <Setter Property="Foreground" Value="#AAA"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>

                                                        <!--<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDefaulted" Value="true">
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>-->
                                                    </ControlTemplate>


                                                </Setter.Value>
                                            </Setter>
                                        </Style>

                                    </Button.Resources>
                                </Button>
                                <Button Grid.Column="1" Content="Close" Foreground="White" Margin="5,0,0,0" 
                                        Style="{DynamicResource FunButtonStyle}" Grid.RowSpan="3"
                                        Command="{Binding CloseDeviceCommand}"
                                        CommandParameter="{Binding ElementName=window}"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>

                <Border CornerRadius="5" Background="White" Margin="10">
                    <Border.Effect>
                        <DropShadowEffect Color="#F2F2F2" ShadowDepth="10" BlurRadius="105" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                    <Grid Margin="30,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <ComboBox Grid.Row="0"  VerticalContentAlignment="Center" 
                                  Height="35" Style="{DynamicResource FunComboBoxStyle}"
                                  SelectedIndex="{Binding TestPageModel.FunComboBoxIndex,UpdateSourceTrigger=PropertyChanged}">
                            
                            <ComboBox.Resources>
                                <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
                                    <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
                                </LinearGradientBrush>
                                <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
                                <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
                                <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
                                <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
                                <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
                                <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
                                <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFECF4FC" Offset="0.0"/>
                                    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                                </LinearGradientBrush>
                                <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
                                <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
                                <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
                                <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
                                    <GradientStop Color="#FFDCECFC" Offset="1.0"/>
                                </LinearGradientBrush>
                                <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
                                <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
                                <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFDAECFC" Offset="0.0"/>
                                    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                                </LinearGradientBrush>
                                <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
                                <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
                                <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
                                <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
                                    <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
                                </LinearGradientBrush>
                                <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
                                <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
                                <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
                                <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter Property="Focusable" Value="false"/>
                                    <Setter Property="ClickMode" Value="Press"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="templateRoot" CornerRadius="5" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                                                    <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                        <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsPressed" Value="true">
                                                        <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                                                    </MultiDataTrigger>
                                                    <Trigger Property="IsEnabled" Value="false">
                                                        <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                                    </Trigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                                                    </MultiDataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                            <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                                        <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                                        <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                                                    </MultiDataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                        </Grid.ColumnDefinitions>
                                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                <Border CornerRadius="5" x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Themes:SystemDropShadowChrome>
                                        </Popup>
                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="true"/>
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </MultiTrigger>
                                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                                <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
                                <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                                    <Setter Property="AllowDrop" Value="true"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="MinHeight" Value="0"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                        </Grid.ColumnDefinitions>
                                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                            <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                            </Canvas>
                                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </Grid>
                                                    </ScrollViewer>
                                                </Border>
                                            </Themes:SystemDropShadowChrome>
                                        </Popup>
                                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                                        <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                                            <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Trigger>
                                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                            <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsGrouping" Value="true"/>
                                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                        </MultiTrigger>
                                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                                <Style x:Key="FunComboBoxStyle" TargetType="{x:Type ComboBox}">
                                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                    <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
                                    <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="Padding" Value="6,3,5,3"/>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsEditable" Value="true">
                                            <Setter Property="IsTabStop" Value="false"/>
                                            <Setter Property="Padding" Value="2"/>
                                            <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Resources>

                            <ComboBoxItem FontSize="16" IsSelected="True"
                                          Content="0x01: 读线圈" VerticalContentAlignment="Center" 
                                          Foreground="Red" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"
                                          />
                            <ComboBoxItem FontSize="16"
                                          Content="0x02: 读离散量输入" VerticalContentAlignment="Center"
                                          Foreground="DarkKhaki" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>
                            <ComboBoxItem FontSize="16"
                                          Content="0x04: 读输入寄存器" VerticalContentAlignment="Center"
                                          Foreground="BlueViolet" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>
                            <ComboBoxItem FontSize="16"
                                          Content="0x03: 读保持寄存器" VerticalContentAlignment="Center"
                                          Foreground="DarkCyan" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>
                            <ComboBoxItem FontSize="16"
                                          Content="0x05: 写单个线圈" VerticalContentAlignment="Center"
                                          Foreground="DarkGray" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>
                            <ComboBoxItem FontSize="16"
                                          Content="0x0F: 写多个线圈" VerticalContentAlignment="Center"
                                          Foreground="DarkOliveGreen" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>
                            <ComboBoxItem FontSize="16"
                                          Content="0x06: 写单个保持寄存器" VerticalContentAlignment="Center"
                                          Foreground="Gold" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>
                            <ComboBoxItem FontSize="16"
                                          Content="0x10: 写多个保持寄存器" VerticalContentAlignment="Center"
                                          Foreground="Violet" MinWidth="20" 
                                          HorizontalAlignment="Left" Height="35" Width="232"/>

                        </ComboBox>
                        <Grid Grid.Row="1" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Slave ID:" Height="35" FontSize="16" HorizontalAlignment="Left"
                                   VerticalAlignment="Center"/>
                            <TextBox Grid.Column="1" TextWrapping="Wrap" Text="{Binding TestPageModel.Slave_ID,UpdateSourceTrigger=PropertyChanged}" Height="35" MinLines="20" 
                                     FontSize="16" VerticalAlignment="Center" MinHeight="20" Style="{DynamicResource CircularTextBoxStyle}"/>
                        </Grid>
                        <Grid Grid.Row="2" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="1" Content="Send" Foreground="White" 
                                    Margin="0,0,0,0" Style="{DynamicResource FunButtonStyle}" Grid.RowSpan="3"
                                    Command="{Binding SendMessageCommand}"
                                    CommandParameter="{Binding ElementName=window}"/>
                        </Grid>
                    </Grid>



                </Border>
                <Border CornerRadius="5" Background="White" Margin="10">
                    <Border.Effect>
                        <DropShadowEffect Color="#F2F2F2" ShadowDepth="10" BlurRadius="105" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                    <Grid Margin="30,10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Address  :" Height="35" FontSize="16" HorizontalAlignment="Left"
                                   VerticalAlignment="Center"/>
                            <TextBox Grid.Column="1" TextWrapping="Wrap" Text="{Binding TestPageModel.Address,UpdateSourceTrigger=PropertyChanged}" Height="35" MinLines="20" 
                                     FontSize="16" VerticalAlignment="Center" MinHeight="20" Style="{DynamicResource CircularTextBoxStyle}"/>
                        </Grid>
                        
                        <Grid Grid.Row="1" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Quantity :" Height="35" FontSize="16" HorizontalAlignment="Left"
                                   VerticalAlignment="Center"/>
                            <TextBox Grid.Column="1" TextWrapping="Wrap" Text="{Binding TestPageModel.Quantity,UpdateSourceTrigger=PropertyChanged}" Height="35" MinLines="20" 
                                     FontSize="16" VerticalAlignment="Center" MinHeight="20" Style="{DynamicResource CircularTextBoxStyle}"/>
                        </Grid>
                        <Grid Grid.Row="2" Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.5*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="Value      :" Height="35" FontSize="16" HorizontalAlignment="Left"
                                   VerticalAlignment="Center"/>
                            <TextBox Grid.Column="1" Text="{Binding TestPageModel.Value,UpdateSourceTrigger=PropertyChanged}" Height="35" MinLines="20" 
                                     FontSize="16" VerticalAlignment="Center" MinHeight="20" Style="{DynamicResource CircularTextBoxStyle}"/>
                        </Grid>
                        
                    </Grid>
                </Border>
                <Border CornerRadius="5" Background="White" Margin="10">
                    <Border.Effect>
                        <DropShadowEffect Color="#F2F2F2" ShadowDepth="10" BlurRadius="105" Opacity="0.4" Direction="270"/>
                    </Border.Effect>
                    
                    <DataGrid FontSize="16" VerticalScrollBarVisibility="Visible" HeadersVisibility="All">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Time" Width="100" Binding="{Binding Time}"/>
                            <DataGridTextColumn Header="Data" Width="200" Binding="{Binding Data}"/>
                        </DataGrid.Columns>
                    </DataGrid>

                </Border>
            </UniformGrid>
            <Border Grid.Row="1" CornerRadius="5" Background="White" Margin="10">
                <Border.Effect>
                    <DropShadowEffect Color="#F2F2F2" ShadowDepth="10" BlurRadius="105" Opacity="0.4" Direction="270"/>
                </Border.Effect>
                
                
                
            </Border>

            <TextBlock Grid.Row="2" Text="{Binding TestPageModel.StateMessage}"  Foreground="Red" 
                       FontSize="16"
                       VerticalAlignment="Bottom" TextWrapping="Wrap"
                       HorizontalAlignment="Right"/>
        </Grid>

    </ScrollViewer>
</UserControl>
